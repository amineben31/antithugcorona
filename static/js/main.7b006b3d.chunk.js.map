{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","input","len","fadeAnim","useRef","Animated","Value","current","timing","toValue","duration","start","style","padding","backgroundColor","href","alt","src","textAlign","fontSize","color","Image","source","width","height","opacity","borderRadius","boxShadow","fontWeight","target","length","substring","margin","onClick","e","window","open","Number","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b006b3d.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { Animated } from \"react-native-web\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 100px;\n  @media (min-width: 767px) {\n    width: 100;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 10px 11px 2px rgba(0, 0, 0, 0.7);\n  \n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledImgRoadMap = styled.img`\n  box-shadow: 0px 10px 11px 2px rgba(0, 0, 0, 0.7);\n  \n  background-color: var(--accent);\n  border-radius: 80%;\n  width: 100px;\n  @media (min-width: 900px) {\n    width: 20px;\n  }\n  @media (min-width: 1000px) {\n    width: 100px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  \n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const fadeIn = () => {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 5000\n    }).start();\n  };\n\n  return (\n    useEffect(() => {\n      fadeIn();\n    }, []),\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 0, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n\n        <a href={CONFIG.MARKETPLACE_LINK}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </a>\n        <a style={{\n              textAlign: \"center\",\n              fontSize : 30,\n              color: \"var(--primary-text)\",\n            }}>(ANTI) THUG CORONA</a>\n                      <Animated.Image\n                       source={\"/config/images/GANG.png\"}\n      style={[\n        {\n          width:800,\n          height: 300,\n          opacity : fadeAnim,\n          \n        }\n      ]}\n      >\n\n      </Animated.Image>\n\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/1.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n             \n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <a href=\"#dernieres-nouvelles\">\n              <StyledButton\n\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Roadmap\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n              </a>\n            </span>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  0.01 ETH\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/2.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n        <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              width : \" 70%\",\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n             \n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            \n             \n          \n          <s.Container id=\"dernieres-nouvelles\">\n       \n         \n            <s.TextTitle\n            \n              style={{\n                width : \" 100%\",\n                height : 100,\n                \n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Roadmap\n            </s.TextTitle>\n            <h1 style={{\n                              width : \" 100%\",\n                            \n               fontSize : 20,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>  1 week challenge :</h1>\n              <s.SpacerLarge/>\n            <p  style={{\n               fontSize : 18,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>if you sell your corona in the week you bought it, you will receive another for free, and who bought it will have the same challenge, things to know:\n-1 free nft per owner\n              -you have to sell it at least the same price you bought it </p>\n\n             \n\n<s.SpacerLarge/>\n              <h1 style={{\n                              width : \" 100%\",\n                          \n               fontSize : 20,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>  Lottery :</h1>\n              <s.SpacerLarge/>\n             <p style={{\n               fontSize : 18,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>\n\nAfter selling all the collection we will make a lotery and one person will win a trip to world cup in quatar hotel, flight ticket and match ticket included ( if it is impossible in your country we will send you the equivalent in dollar) \n              </p>\n<s.SpacerLarge/>\n              <h1 style={{\n                              width : \" 100%\",\n                              \n               fontSize : 20,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}> Game on Metaverse:</h1>\n              <s.SpacerLarge/>\n               <p style={{\n               fontSize : 18,\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>\nWe are creating a game which will be available after the second collection like flappy bord, the  first in the world will receive 10 token, second 5 third  3 token every week and the first of your country will receive 1 token, the price of the token is ... dollars\nPs: The third collection will be sell only on with our crypto\nWho has legendary and rare nft will have to win the game only against others who has same NFTs, you will have more chance to win  \n50% off from the seconde collection (or equivalent  in our own crypto 'coinrona')\n            </p>      \n\n            </s.Container>\n            <s.SpacerSmall />\n\n            <s.SpacerMedium />\n          \n          <s.SpacerLarge />\n          \n       \n\n        </s.Container>\n       \n      \n      </s.Container>\n    \n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}